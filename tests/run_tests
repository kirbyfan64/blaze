#!/bin/bash

# Any copyright is dedicated to the Public Domain.
# http://creativecommons.org/publicdomain/zero/1.0/

dir=`dirname $0`

compile() {
    test=$1
    shift
    $@ $dir/../build/tst $test /tmp/$$.tmp 2>&1 1>/dev/null
}

compile_run() {
    test=$1
    shift
    $@ $dir/../build/tst $test /tmp/$$.tmp 1>/dev/null
    [ -f /tmp/$$.tmp ] && /tmp/$$.tmp
}

message() {
    len=`printf "$1" | wc -c`
    str=`printf '*%.0s' $(seq 1 $len)`
    echo -e "$str\n$1\n$str"
}

run_test() {
    test=$1
    echo "Running $test..."
    if [ "$valgrind" == "1" ]; then
        run_test1 $test valgrind --leak-check=full --show-leak-kinds=all \
            --error-exitcode=1 > /tmp/.blaze.output || cat /tmp/.blaze.output
    else
        data=`cat $test | awk '/#\[/,/\]#/' | tail -n +2 | head -n -1`
        kind=`echo "$data" | head -1`
        expected=`echo "$data" | tail -n +2 | sed "s#^:#$test:#"`
        case "$kind" in
            ERROR) func=compile ;;
            RUN) func=compile_run ;;
            *)
                message "test $test has invalid kind $kind"
                exit 1
                ;;
        esac
        output=`$func $test | perl -pe 's/\e\[?.*?[\@-~]//g'`
        diff -u -B -b <(echo "$expected") <(echo "$output")
    fi
}

if [ "$1" == "--valgrind" ]; then
    valgrind=1
    shift
else
    valgrind=0
fi

if [ "$#" -eq 0 ]; then
    tests=$dir/test*.blz
else
    tests=`echo "$@" | \
           awk '{
            for(i = 1; i <= NF; i++) {
                file="tests/"$i".blz";
                if ((getline _ < file) < 0) {
                    print $i" is not a valid test" > "/dev/stderr";
                    exit 1;
                }
                $i=file;
            }
            print;
           }'`
fi

for test in $tests; do
    run_test $test
done

rm -f /tmp/.blaze.output
