struct X[T]:
    v: T
    fun new: return

fun f -> int:
    let x = new X
    return x.v

fun g -> int:
    let x = new X[int]
    return x
    return x.v
    let y = new X[str]
    return y
    return y.v

fun h -> X[int]:
    return new X[Y]
    return new X[str]

#[
ERROR
:18:18: error: undeclared identifier 'Y'
    return new X[Y]
                 ~
:6:17: error: expected non-generic type
    let x = new X
                ~
:1:8: note: 'X' declared here
    struct X[T]:
           ~
:11:12: error: function was declared to return type 'int', not 'X[int]'
    return x
           ~
:9:10: note: function return type declared here
    fun g -> int:
             ~~~
:10:9: note: 'x' declared here
    let x = new X[int]
        ~
:14:12: error: function was declared to return type 'int', not 'X[str]'
    return y
           ~
:9:10: note: function return type declared here
    fun g -> int:
             ~~~
:13:9: note: 'y' declared here
    let y = new X[str]
        ~
:15:14: error: function was declared to return type 'int', not 'str'
    return y.v
             ~
:9:10: note: function return type declared here
    fun g -> int:
             ~~~
:13:9: note: 'y' declared here
    let y = new X[str]
        ~
:2:5: note: 'v' declared here
    v: T
    ~
:19:17: error: function was declared to return type 'X[int]', not 'X[str]'
    return new X[str]
                ~
:17:11: note: function return type declared here
    fun h -> X[int]:
              ~
]#
