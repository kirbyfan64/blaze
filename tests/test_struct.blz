global var x: int
global var mz: int

struct A:
    mx: int
    mx: int
    x: int
    fun my -> int:
        let x = 1
        my(x)
        return mx
    mz: int

fun f:
    let a = new A
    a.my()

#[
ERROR
:6:5: error: duplicate definition of mx
    mx: int
    ~~
:5:5: note: previous definition is here
    mx: int
    ~~
:9:13: warning: redefinition of x shadows outer definition
    let x = 1
        ~
:1:12: note: previous definition is here
    global var x: int
               ~
:10:9: error: identifier 'my' cannot be accessed without @
    my(x)
    ~~
:8:9: note: 'my' declared here
    fun my -> int:
        ~~
:11:16: error: identifier 'mx' cannot be accessed without @
    return mx
           ~~
:5:5: note: 'mx' declared here
    mx: int
    ~~
:10:9: error: function expected 0 argument(s), not 1
    my(x)
    ~~
:8:9: note: 'my' declared here
    fun my -> int:
        ~~
:4:8: error: struct must have a constructor
    struct A:
           ~
#]
